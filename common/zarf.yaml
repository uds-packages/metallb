# Copyright 2025 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

kind: ZarfPackageConfig
metadata:
  name: uds-metallb-common
  description: "UDS MetalLB Common"
  url: https://github.com/metallb/metallb

components:
  - name: metallb
    required: true
    charts:
      - name: metallb
        namespace: metallb-system
        url: https://metallb.github.io/metallb
        version: 0.15.2
        valuesFiles:
          - "../values/common-values.yaml"
      - name: addresspools
        version: "0.1.2"
        namespace: metallb-system
        localPath: ../charts/addresspools
        variables:
          - name: INTERFACE
            path: interface
            description: The network interface of the K8s nodes which MetalLB should use
          - name: IP_ADDRESS_POOL
            path: default.ipAddressPoolCIDR
            description: The pool of IP addresses to use for ingress to the cluster
          - name: IP_ADDRESS_ADMIN_INGRESSGATEWAY
            path: adminIngress.ipAddressPool
            description: When using this package in concert with UDS Core, the IP address of the admin-ingressgateway service
          - name: IP_ADDRESS_PASSTHROUGH_INGRESSGATEWAY
            path: passthroughIngress.ipAddressPool
            description: When using this package in concert with the IDAM package, the IP address of the keycloak-ingressgateway service
          - name: IP_ADDRESS_TENANT_INGRESSGATEWAY
            path: tenantIngress.ipAddressPool
            description: When using this package in concert with UDS Core, the IP address of the tenant-ingressgateway service
    actions:
      onDeploy:
        before:
          # Pass the check if:
          #   IP_ADDRESS_POOL is set
          #   OR
          #   IP_ADDRESS_ADMIN_INGRESSGATEWAY AND IP_ADDRESS_TENANT_INGRESSGATEWAY are set
          - description: Validating input variables...
            cmd: |
              if [ -z "$ZARF_VAR_SKIP_INPUT_VALIDATION" ]; then
                [ -n "$ZARF_VAR_IP_ADDRESS_POOL" ] || {
                  [ -n "$ZARF_VAR_IP_ADDRESS_ADMIN_INGRESSGATEWAY" ] && [ -n "$ZARF_VAR_IP_ADDRESS_TENANT_INGRESSGATEWAY" ];
                } || {
                  echo "Invalid input variables. You are required to at least set either IP_ADDRESS_POOL or IP_ADDRESS_ADMIN_INGRESSGATEWAY and IP_ADDRESS_TENANT_INGRESSGATEWAY";
                  exit 1;
                }
              fi

          - description: Fix Helm ownership metadata for backwards compat w/v0.1.2
            cmd: |
              ./zarf tools kubectl annotate secret -n metallb-system metallb-webhook-cert meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate secret -n metallb-system metallb-webhook-cert meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate configmap -n metallb-system metallb-excludel2 meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate configmap -n metallb-system metallb-excludel2 meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bfdprofiles.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bfdprofiles.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bgpadvertisements.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bgpadvertisements.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bgppeers.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition bgppeers.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition communities.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition communities.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition ipaddresspools.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition ipaddresspools.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition l2advertisements.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition l2advertisements.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition servicel2statuses.metallb.io meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate customresourcedefinition servicel2statuses.metallb.io meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl annotate validatingwebhookconfiguration metallb-webhook-configuration meta.helm.sh/release-name=metallb --overwrite=true || true
              ./zarf tools kubectl annotate validatingwebhookconfiguration metallb-webhook-configuration meta.helm.sh/release-namespace=metallb-system --overwrite=true || true
              ./zarf tools kubectl delete daemonset -n metallb-system speaker || true
              ./zarf tools kubectl delete deployment -n metallb-system controller || true
              ./zarf tools kubectl delete service -n metallb-system metallb-webhook-service || true
